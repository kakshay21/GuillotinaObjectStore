# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import transaction_pb2 as transaction__pb2


class TransactionStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StartTransaction = channel.unary_unary(
        '/gos.Transaction/StartTransaction',
        request_serializer=transaction__pb2.StartTransactionRequest.SerializeToString,
        response_deserializer=transaction__pb2.TxnId.FromString,
        )
    self.GetOidState = channel.unary_unary(
        '/gos.Transaction/GetOidState',
        request_serializer=transaction__pb2.GetOidTxn.SerializeToString,
        response_deserializer=transaction__pb2.State.FromString,
        )


class TransactionServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StartTransaction(self, request, context):
    """Starts a new transaction
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOidState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TransactionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StartTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.StartTransaction,
          request_deserializer=transaction__pb2.StartTransactionRequest.FromString,
          response_serializer=transaction__pb2.TxnId.SerializeToString,
      ),
      'GetOidState': grpc.unary_unary_rpc_method_handler(
          servicer.GetOidState,
          request_deserializer=transaction__pb2.GetOidTxn.FromString,
          response_serializer=transaction__pb2.State.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'gos.Transaction', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
